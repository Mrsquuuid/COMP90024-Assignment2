## create instances on nectar
#
#- name: create instance0
#  os_server:
#    name: "{{ instance0_name }}"
#    image: "{{ instance_image }}"
#    key_name: "{{ instance_key_name }}"
#    flavor: "{{ instance_flavor }}"
#    availability_zone: "{{ availability_zone }}"
#    security_groups: "{{ sg_names }}"
#    auto_floating_ip: yes
#    wait: yes
#    timeout: 600
#    state: present
#  register: os_instance0
#
#- debug:
#    msg: "Instance {{ instance0_name }} has been created. IP address is {{ os_instance0.openstack.public_v4 }}"
#  when: os_instance0.openstack is defined
#
#- name: create instance1
#  os_server:
#    name: "{{ instance1_name }}"
#    image: "{{ instance_image }}"
#    key_name: "{{ instance_key_name }}"
#    flavor: "{{ instance_flavor }}"
#    availability_zone: "{{ availability_zone }}"
#    security_groups: "{{ sg_names }}"
#    auto_floating_ip: yes
#    wait: yes
#    timeout: 600
#    state: present
#  register: os_instance1
#
#- debug:
#    msg: "Instance {{ instance1_name }} has been created. IP address is {{ os_instance1.openstack.public_v4 }}"
#  when: os_instance1.openstack is defined
#
#- name: create instance2
#  os_server:
#    name: "{{ instance2_name }}"
#    image: "{{ instance_image }}"
#    key_name: "{{ instance_key_name }}"
#    flavor: "{{ instance_flavor }}"
#    availability_zone: "{{ availability_zone }}"
#    security_groups: "{{ sg_names }}"
#    auto_floating_ip: yes
#    wait: yes
#    timeout: 600
#    state: present
#  register: os_instance2
#
#- debug:
#    msg: "Instance {{ instance2_name }} has been created. IP address is {{ os_instance2.openstack.public_v4 }}"
#  when: os_instance2.openstack is defined

---
# Create an instance on NeCTAR
- name: Create an instance
  os_server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ instance_flavor }}'
    availability_zone: '{{ availability_zone }}'
    security_groups: '{{ sg_names }}'
    volumes: '{{ item.volumes }}'
    auto_floating_ip: yes
    wait: yes
    timeout: 600
    state: present
  loop: '{{ instances }}'
  register: os_instance

- debug:
    msg: "Instance {{ item.openstack.name }} has been created. IP address is {{ item.openstack.public_v4 }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: Wait for connection
  wait_for:
    host: "{{ item.openstack.public_v4 }}"
    port: 22
    timeout: 120
    search_regex: OpenSSH
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined
